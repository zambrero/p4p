{"version":3,"sources":["Counter.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["params","window","location","search","substr","Counter","props","includes","all","useState","digitElements","setDigitElements","count","toString","oldCount","setOldCount","initial","setInitial","background","className","setDigitElementsFunc","newNumber","refresh","newNumberArray","split","oldNumberArray","newDigits","extraClasses","thinner","i","length","console","log","push","useEffect","setTimeout","animationLength","App","mostSignificant","setCount","thin","setThin","inc","useRef","randomCount","a","fetch","ee","json","e","TotalItemCount","current","slice","nowMillis","Date","getMilliseconds","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b2e2c11.chunk.js","sourcesContent":["// @ts-nocheck\nimport { useEffect, useState } from \"react\";\nimport \"./styles.css\";\n\ntype Props = {\n  count: number;\n  thinner: boolean;\n};\n\nconst params = window.location.search.substr(1);\n\nfunction Counter(props: Props) {\n  const leastSignificant = !params.includes(\"mostSignificant\");\n  const all = params.includes(\"all\");\n  const [digitElements, setDigitElements] = useState([]);\n  const [oldCount, setOldCount] = useState(props.count.toString());\n  const [initial, setInitial] = useState(true);\n\n  const animationLength = 400;\n\n  const background = (\n    <>\n      <div className={\"bg1\"}></div>\n      <div className={\"bg2\"}></div>\n      <div className={\"bg3\"}></div>\n      <div className={\"bg4\"}></div>\n    </>\n  );\n\n  const setDigitElementsFunc = (newNumber: number, refresh?: boolean) => {\n    const newNumberArray = newNumber.toString().split(\"\");\n    const oldNumberArray = oldCount.split(\"\");\n    const newDigits = [];\n\n    const extraClasses = ` ${props.thinner ? \"thin\" : \"\"} ${all ? \"all\" : \"\"}`;\n\n    for (let i = 0; i < newNumberArray.length; i++) {\n      if (refresh) {\n        console.log(\"herrree\");\n        newDigits.push(\n          <div key={i} className={`digit ${extraClasses}`}>\n            {background}\n            <div className={\"top\"}>{newNumberArray[i]}</div>\n            <div className={\"bottom\"}>{newNumberArray[i]}</div>\n          </div>\n        );\n      } else if (newNumberArray[i] !== oldNumberArray[i]) {\n        newDigits.push(\n          <div key={i} className={`digit ${extraClasses}`}>\n            {background}\n\n            <div className={\"top\"}>{newNumberArray[i]}</div>\n            <div className={\"bottom\"}>{oldNumberArray[i]}</div>\n            <div className={\"half\"}>{oldNumberArray[i]}</div>\n            <div className={\"bottom-half\"}>{newNumberArray[i]}</div>\n          </div>\n        );\n      } else {\n        newDigits.push(\n          <div key={i} className={`digit ${extraClasses}`}>\n            {background}\n\n            <div className={\"top\"}>{oldNumberArray[i]}</div>\n            <div className={\"bottom\"}>{oldNumberArray[i]}</div>\n          </div>\n        );\n      }\n    }\n    setDigitElements(newDigits);\n  };\n\n  useEffect(() => {\n    if (initial) {\n      setInitial(false);\n      setDigitElementsFunc(props.count, true);\n      return;\n    }\n    console.log(\"here once\", props.count);\n    setDigitElementsFunc(props.count);\n\n    setTimeout(() => {\n      setOldCount(props.count.toString());\n    }, animationLength / 2);\n\n    setTimeout(() => {\n      setDigitElementsFunc(props.count, true);\n    }, animationLength + 50);\n  }, [props.count]);\n\n  useEffect(() => {\n    // setThin(true);\n  }, [props.thinner]);\n\n  return <div className={`container ${all ? \"all\" : \"\"}`}>{digitElements}</div>;\n}\n\nexport default Counter;\n","// @ts-nocheck\nimport { useEffect, useState, useRef } from \"react\";\nimport \"./App.css\";\nimport Counter from \"./Counter.tsx\";\n\nconst params = window.location.search.substr(1);\n\nfunction App(props) {\n  const [mostSignificant, setMostSignificant] = useState(\n    params.includes(\"mostSignificant\")\n  );\n\n  const all = params.includes(\"all\");\n  const [count, setCount] = useState(all ? \"????????\" : \"????\");\n\n  const [thin, setThin] = useState(false);\n  const inc = useRef(0);\n\n  const randomCount = async () => {\n    const ee = await fetch(\n      \"https://zambrero.xchangefusion.com/api/product/getdonationbyid/2\"\n    );\n\n    const e = await ee.json();\n    if (params.includes(\"debug\")) {\n      e.TotalItemCount = 99999990 + inc.current;\n    }\n    inc.current += 1;\n    if (e.TotalItemCount.toString().length === 8) {\n      setThin(false);\n      if (mostSignificant) {\n        setCount(e.TotalItemCount.toString().slice(0, 4));\n      } else {\n        setCount(e.TotalItemCount.toString().slice(4));\n      }\n    } else if (e.TotalItemCount.toString().length === 9) {\n      setThin(true);\n      if (mostSignificant) {\n        setCount(e.TotalItemCount.toString().slice(0, 4));\n      } else {\n        setCount(e.TotalItemCount.toString().slice(4));\n      }\n    } else if (e.TotalItemCount.toString().length === 10) {\n      setThin(true);\n      if (mostSignificant) {\n        setCount(e.TotalItemCount.toString().slice(0, 5));\n      } else {\n        setCount(e.TotalItemCount.toString().slice(5));\n      }\n    } else {\n      setThin(false);\n      setCount(\"????\");\n    }\n\n    if (all) {\n      setCount(e.TotalItemCount.toString());\n    }\n  };\n\n  useEffect(() => {\n    const nowMillis = new Date().getMilliseconds();\n    setTimeout(() => {\n      setInterval(() => {\n        randomCount();\n      }, 2000);\n    }, 1000 - nowMillis);\n  }, []);\n\n  return (\n    <div className=\"body\">\n      <Counter count={count} thinner={thin} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}